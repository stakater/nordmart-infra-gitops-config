apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: stakater-e2e-test-v1
spec:
  workspaces:
  - name: source
  params:
  - name: gitorganization
    description: Git organization URL
    default: ""
  - name: gite2erepo
    description: The Directory of E2E
    default: ""
  - name: prNumber
    description: In case of PR, PR number that is to be used in image tag. If this field is empty it means that it's a commit on main branch
    default: "NA"
  - description: Tag of the Image, Generated by create-git-tag-v1
    name: imageTag
    type: string
  - description: Name of the repository
    name: repoName
    type: string
  - description: Namespace
    name: namespace
    type: string
  steps:
  - image: 'stakater/pipeline-toolbox:v0.0.2'
    name: clone
    args:
      - '-c'
      - >
        git clone
        https://${GIT_USERNAME}:${GIT_PASSWORD}@$(params.gitorganization)/$(params.gite2erepo)
    command:
      - /bin/bash        
    env:
      - name: GIT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: github-stakater-tekton-bot
            key: password
      - name: GIT_USERNAME
        valueFrom:
          secretKeyRef:
            name: github-stakater-tekton-bot
            key: username
      - name: GIT_EMAIL
        valueFrom:
          secretKeyRef:
            name: github-stakater-tekton-bot
            key: email
    workingDir: $(workspaces.source.path)
  - image: 'stakater/pipeline-e2e-toolbox:v0.0.1'
    workingDir: $(workspaces.source.path)
    name: e2e
    script: |

       COMMIT_HASH=`echo -n $(params.IMAGE_TAG) | tail -c 8`

       if [ ! -f pom.xml ]; then
          
          cd $(params.gite2erepo)
          
          yarn install
          
          if [ $(params.prNumber) != "NA" ]; then

            TEST_URL=$(oc get route -n pr-$(params.prNumber)-$(params.repoName)-$COMMIT_HASH -l app=$(yq .application.applicationName ../deploy/values.yaml) -o jsonpath='{range .items[*]}{.spec.host}')
          
            yarn run start ci https://$TEST_URL 
          
          else

            TENANT_NAME=$(echo $(params.namespace) | cut -d'-' -f 1)
          
            TEST_URL=$(oc get route -n $TENANT_NAME-dev -l app=$(yq .application.applicationName ../deploy/values.yaml) -o jsonpath='{range .items[*]}{.spec.host}')
          
            yarn run start ci https://$TEST_URL 
          
          fi

        fi
    
